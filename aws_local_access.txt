This will explain the process I used to get local access to AWS endpoints and have this code execute properly

NOTE: THIS IS ONLY IF YOURE DEVELOPING ON YOUR LOCAL MACHINE
------------------------------------------------------------
If you're on eceprog while doing this (like I was, you can't install the AWS CLI)
Instead, you have to put your credentials into .env so they can be loaded in as environment variables

You can get the environment variables by logging into the Access Portal in this link:
https://d-9a670aec6c.awsapps.com/start
And followng similar steps as below to get to the screen with all the tokens
Once you do, under "Option 3", there should be values for your tokens that you can copy-paste into the .env

This process saves you ever having to do that which is nice
------------------------------------------------------------

The main document I followed is linked below
https://docs.aws.amazon.com/sdkref/latest/guide/access-sso.html

The first step is to install the AWS command line interface, which can be found at the link below
https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html

Next, you need to access your AWS IAM Identity Center user profile to get the necessary access keys
There is a single sign on link you can access thru the AWS Console:
https://d-9a670aec6c.awsapps.com/start
Once you load that, you can see a user profile under "AWS accounts". There should be a little dropdown arrow, and when you click that it will have a link that says "command line/programmatic access"
Go over to the appropriate operating system tab and you'll see a bunch of access keys/tokens

Next, open the command line and type in "aws configure sso". This basically sets up permissions for your local device to access AWS and the resources on our cloud remotely
You'll get a ton of prompts, and here's how to answer each:
    SSO session name: Give the config a name (I called mine tlelievre_dev)
    SSO start URL: Copy it from the login webpage you were just on
    SSO region: Copy it from the login webpage you were just on
    SSO registration scopes: sso:account:access

    Here a webpage opens up, just comfirm it then fill in the following prompts:

    CLI default client Region [None]: us-east-2
    CLI default output format [None]: text or json, whichever you prefer
    CLI profile name [AdministratorAccess-{ID Number}]: default

If everything is right, the command aws sts get-caller-identity should return something

To log in to your AWS session, do aws sso login

The next step is to find your AWS folder.

For Windows it'll be under C:\Users\{USER_NAME}\.aws
For Mac and Linux (eceprog) it'll be under ~/.aws

In this folder, you'll see a config file and some other folders. You should make a file called "credentials" with no file type
(I did this by just making a copy of the config file and renaming it to credentials)
Next, delete everything in that file and go back to the webpage with all the tokens. Go to "Option 2" and copy the set of keys, which should look something like this:

[{ID Number}_AdministratorAccess]
aws_access_key_id=
aws_secret_access_key=
aws_session_token=

Paste these into the credentials file. IMPORTANT: you need to change the name in brackets from {ID Number}_AdministratorAccess to "default". Mine looks like this:

[default]
aws_access_key_id= <my key here >
aws_secret_access_key= <my key here >
aws_session_token= <my token here >

Now, the code should be able to automatically access these credentials and should work properly!

